USE IVP3686;

SELECT * FROM BANK;

SELECT DATENAME (DW, GETDATE());

CREATE TRIGGER TRGBANK
ON BANK
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	 IF DATENAME(DW, GETDATE()) = 'Wednesday'
	 BEGIN
		ROLLBACK;
		PRINT 'BANK IS CLOSED ON WEDNESDAY';
	 END
END

DELETE FROM BANK;

ALTER TRIGGER TRGBANK
ON BANK
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	 IF DATENAME(DW, GETDATE()) IN ('WEDNESDAY', 'SUNDAY')
	 BEGIN
		ROLLBACK;
		PRINT 'BANK IS CLOSED ON WEDNESDAY';
	 END
END

ALTER TRIGGER TRGBANK
ON BANK
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	 IF DATEPART(HH, GETDATE()) = 12
	 BEGIN
		ROLLBACK;
		PRINT 'BANK IS CLOSED BETWEEN 12 PM TO 1 PM; LUNCH HOURS';
	 END
END

SELECT DATEPART(HH, GETDATE())
SELECT DATENAME(HH, GETDATE())

ALTER TRIGGER TRGBANK
ON BANK
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	 IF DATEPART(HH, GETDATE()) = 12 AND DATENAME(DW, GETDATE()) = 'Wednesday'
	 BEGIN
		ROLLBACK;
		PRINT 'BANK IS CLOSED BETWEEN 12 PM TO 1 PM; LUNCH HOURS';
	 END
END

DROP TRIGGER TRGBANK;

DISABLE TRIGGER TRGBANK ON BANK;

ENABLE TRIGGER TRGBANK ON BANK;

SELECT * FROM VUSAVINGACCOUNT;

UPDATE VUSAVINGACCOUNT
SET BALANCE = 50000
WHERE CID = 20;

CREATE TRIGGER TRGBANK_VU
ON VUJOINTACCOUNT
INSTEAD OF UPDATE, DELETE     -- FOR AND AFTER IS FOR TABLE, WHILE INSTEAD OF IS FOR VIEWS
AS
BEGIN
	ROLLBACK;
	PRINT 'NO UPDATE AND DELETE IS ALLOWED. CONTACT YOUR DBA.'
END

DELETE FROM VUJOINTACCOUNT
INSERT INTO VUJOINTACCOUNT
VALUES (60, 'Amit', 'Joint', 123456);

SELECT * FROM VUJOINTACCOUNT;

CREATE TRIGGER TRGDDL
ON DATABASE
FOR DROP_TABLE, DROP_INDEX, DROP_PROCEDURE, 
	ALTER_TABLE, ALTER_INDEX, ALTER_PROCEDURE
AS
BEGIN
	ROLLBACK;
	PRINT 'CHANGES NOT ALLOWED, CONTACT DBA'
END;

DROP TABLE DBO.PROD_BANK;

DROP INDEX [EMPLOYEES_DEPARTMENT_ID_NCI] ON EMPLOYEES;

DROP TRIGGER TRGDDL ON DATABASE;

------ DATA AUDITING ------

SELECT * FROM BANK;

CREATE TRIGGER TRGMAGIC
ON BANK
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	SELECT * FROM INSERTED;
	SELECT * FROM DELETED;
END;

INSERT INTO BANK
VALUES (80, 'RITA', 'SAVING', 98765, 'INDIA');

INSERT INTO BANK
VALUES (90, 'RITESH', 'JOIN', 18765, 'INDIA');

DELETE FROM BANK
WHERE CID = 40 OR CID = 60;

UPDATE BANK
SET BALANCE = BALANCE - 10000
WHERE ACCTYPE = 'SAVING';

UPDATE BANK
SET BALANCE = BALANCE * 2
WHERE ACCTYPE = 'SAVING';

SELECT * FROM INSERTED; --Invalid object name 'INSERTED'.; SINCE THE SCOPE IS ONLY WITHING THE TRIGGER.

drop trigger trgmagic;

SELECT * FROM BANK;

CREATE TABLE AUDITBANK
(
	USERNAME VARCHAR(50),
	XNDATE DATETIME,
	NEWACCTYPE VARCHAR(10),
	OLDACCTYPE VARCHAR(10),
	NEWBAL FLOAT,
	OLDBAL FLOAT,
	XNTYPE VARCHAR(10)
);

ALTER TABLE AUDITBANK
ADD CID INT;

SELECT * FROM AUDITBANK;

CREATE TRIGGER TRGAUDITINSERT
ON BANK
AFTER INSERT
AS
BEGIN
	INSERT INTO AUDITBANK (USERNAME, XNDATE, NEWACCTYPE, OLDACCTYPE, NEWBAL, OLDBAL, XNTYPE, CID)
	SELECT SUSER_SNAME(), GETDATE(), ACCTYPE, NULL, BALANCE, NULL, 'INSERT',CID
	FROM INSERTED;
END;

-- SELECT SUSER_SNAME();

INSERT INTO BANK VALUES (40,'RAMESH','JOINT',123456,'INDIA');
SELECT * FROM AUDITBANK;
INSERT INTO BANK VALUES (150,'RAJESH','JOINT',654321,'INDIA');


CREATE TRIGGER TRGAUDITUPDATE
ON BANK
AFTER UPDATE
AS
BEGIN
	INSERT INTO AUDITBANK (USERNAME, XNDATE, NEWACCTYPE, OLDACCTYPE, NEWBAL, OLDBAL, XNTYPE, CID)
	SELECT SUSER_SNAME(), GETDATE(), I.ACCTYPE, D.ACCTYPE, I.BALANCE, D.BALANCE, 'UPDATE', I.CID
	FROM INSERTED I INNER JOIN DELETED D
	ON I.CID = D.CID;
END;

UPDATE BANK SET BALANCE = 20000 WHERE CID = 10;

CREATE TRIGGER TRGAUDITDELETE
ON BANK
AFTER DELETE
AS
BEGIN
	INSERT INTO AUDITBANK (USERNAME, XNDATE, NEWACCTYPE, OLDACCTYPE, NEWBAL, OLDBAL, XNTYPE, CID)
	SELECT SUSER_SNAME(), GETDATE(), NULL, ACCTYPE, NULL, BALANCE, 'DELETE',CID
	FROM DELETED;
END;

DELETE FROM BANK WHERE CID > 60;
SELECT * FROM AUDITBANK;
SELECT * FROM BANK;

-- INDEXED VIEWS
-- We create unique clustered index on a view.
-- View must be schema-binded

use IVP3686;

SELECT * FROM BANK;

CREATE VIEW VUJOINTACCOUNT
AS
	SELECT * FROM BANK
	WHERE ACCTYPE = 'JOINT';

SELECT * FROM VUJOINTACCOUNT;
SP_SPACEUSED VUJOINTACCOUNT;  -- 0KB

CREATE UNIQUE CLUSTERED INDEX JOINT_IDX
ON VUJOINTACCOUNT(CID);   --ERROR; SHOULD BE SCHEMA BOUND

ALTER VIEW VUJOINTACCOUNT
WITH SCHEMABINDING
AS
	SELECT CID, CNAME, ACCTYPE, BALANCE FROM DBO.BANK
	WHERE ACCTYPE = 'JOINT';

CREATE UNIQUE CLUSTERED INDEX JOINT_IDX
ON VUJOINTACCOUNT(CID);
SELECT * FROM VUJOINTACCOUNT;
SELECT * FROM BANK;

SP_SPACEUSED VUJOINTACCOUNT; -- 8KB
-- NOW THE CLUSTERED INDEX OF THE VIEW HOLDS THE DATA; NORMAL VIEWS DO NOT HOLD DATA
-- SO THIS INDEXED VIEW WORKS LIKE A MINI-TABLE
-- THIS IS SPACE-COSTY BUT PERFORMANCE(I.E TIME-WISE) BETTER.

CREATE VIEW VUEMPDEPT
WITH SCHEMABINDING
AS
	SELECT E.EMPLOYEE_ID, E.FIRST_NAME + ' ' + E.LAST_NAME AS EMPLOYEE_NAME, E.SALARY, E.JOB_ID,
		   E.HIRE_DATE, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
	FROM DBO.EMPLOYEES E INNER JOIN DBO.DEPARTMENTS D
	ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	WHERE D.DEPARTMENT_NAME IN ('Sales', 'Shipping');

SELECT * FROM VUEMPDEPT;

SP_SPACEUSED VUEMPDEPT;

CREATE UNIQUE CLUSTERED INDEX VUEMPDEPT_IDX
ON VUEMPDEPT (EMPLOYEE_ID);		-- IMPROVES PERFORMANCE

--MAXDOP- MAXIMUM DEGREE OF PARALLELISM: HELPS DO THE JOB FASTER BY INTRODUCING PARALLELISM
--EXAMPLE:
SELECT * FROM VUEMPDEPT
OPTION (MAXDOP 4);
-- HOWEVER, THIS IS NOT A FOOL-PROOF SOLUTION; IS WORKING ONLY WHEN SERVER IS FREE. 
-- THE ABOVE QUERY IS LIKE GIVING 4000 THREAD TO A SINGLE QUERY.

-- HINTS:
-- HASH, MERGE, LOOP JOINS
-- SAME SIZE TABLE, UNINDEXED; SAME SIZE TABLE, INDEXED; SMALL TABLE LEFT, BIG RIGHT.









