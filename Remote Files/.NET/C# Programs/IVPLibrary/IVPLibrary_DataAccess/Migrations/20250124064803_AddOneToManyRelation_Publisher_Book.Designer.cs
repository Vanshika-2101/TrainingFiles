// <auto-generated />
using System;
using IVPLibrary_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IVPLibrary_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250124064803_AddOneToManyRelation_Publisher_Book")]
    partial class AddOneToManyRelation_Publisher_Book
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IVPLibrary_Models.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.BookDetails", b =>
                {
                    b.Property<int>("BookDetail_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookDetail_Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChapters")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookDetail_Id");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("BookDetails");
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.Books", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PUblisher_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal(10,5)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookId");

                    b.HasIndex("PUblisher_Id");

                    b.ToTable("Books", t =>
                        {
                            t.HasCheckConstraint("CK_Books_Price", "Price > 0");
                        });

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            ISBN = "12B45",
                            PUblisher_Id = 1,
                            Price = 1200.34m,
                            Title = ".NET Framework"
                        },
                        new
                        {
                            BookId = 2,
                            ISBN = "72B45",
                            PUblisher_Id = 1,
                            Price = 1500.99m,
                            Title = "SQL Server"
                        },
                        new
                        {
                            BookId = 3,
                            ISBN = "00B45",
                            PUblisher_Id = 2,
                            Price = 1000.34m,
                            Title = "Oracle"
                        },
                        new
                        {
                            BookId = 4,
                            ISBN = "99B45",
                            PUblisher_Id = 3,
                            Price = 2000.99m,
                            Title = "Java"
                        },
                        new
                        {
                            BookId = 5,
                            ISBN = "34B45",
                            PUblisher_Id = 3,
                            Price = 3000.99m,
                            Title = "ReactJS"
                        });
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("ProductId");

                    b.ToTable("Products", null, t =>
                        {
                            t.HasCheckConstraint("CK_Product_Price", "Price > 0");
                        });
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.Publisher", b =>
                {
                    b.Property<int>("PUblisher_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PUblisher_Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PUblisher_Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PUblisher_Id = 1,
                            Location = "Delhi",
                            Name = "IVP Publisher"
                        },
                        new
                        {
                            PUblisher_Id = 2,
                            Location = "Mumbai",
                            Name = "AYT Publisher"
                        },
                        new
                        {
                            PUblisher_Id = 3,
                            Location = "Bangalore",
                            Name = "Hedge Publisher"
                        });
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategory_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategory_Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubCategory_Id");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.BookDetails", b =>
                {
                    b.HasOne("IVPLibrary_Models.Models.Books", "Books")
                        .WithOne("BookDetails")
                        .HasForeignKey("IVPLibrary_Models.Models.BookDetails", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.Books", b =>
                {
                    b.HasOne("IVPLibrary_Models.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PUblisher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("IVPLibrary_Models.Models.Books", b =>
                {
                    b.Navigation("BookDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
